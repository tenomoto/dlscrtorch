# `torch`とその入手方法

## `torch`の世界

`torch`はPyTorchをRに移植したものである。
PyTorchは、（執筆時点で）産業や研究で最もよく使われている二つの深層学習フレームワークのうちの一つである。
その設計から、様々な科学計算の問題（その一部を本書の最終部で扱う）で有用なすばらしい道具でもある。
`torch`はRとC++（少しのCを含む）だけで書かれており、これを使うためにPythonをインストールする必要はない。

Python（PyTorch）の側では、エコシステムは同心円状になっている。
中にPyTorch自体、これなしでは何も動作しない中心ライブラリがある。
これを取り囲むのは、フレームワークライブラリと呼ばれる内側の円があり、特別なデータの種類に特化しているか、運用のような仕事の流れの問題を中心据えている。
さらに、より広範なアドオンや特化したコード、ライブラリのエコシステムがあり、それはPyTorchを構成要素やツールとして使っている。

Rの側では同一の「心臓」を用いている。
全ては`torch`のコアに依存している。
Rでも類似のライブラリがあるが、カテゴリの「円」は互いに明確に定められておらず、境界ははっきりとしていない。
活発な開発者のコミュニティがあり、出自や目的も様々だか、さらに`torch`を開発して拡張するために共同で活動し、より多くの人々がそれぞれの目的の達成を手助けしている。
エコシステムは急速に成長しており、個々のパッケージに言及することは控えるが、[torchのウェブサイト](https://torch.mlverse.org/)を訪れれば、その一部が掲示されている。

三つのパッケージについては、名前をあげ、本書で利用する。
それらは`torchvision`、`torchaudio`と`luz`である。
最初の二つは用途を特定した変換、深層学習モデル、データセット、それぞれ画像（動画を含む）及び音声データのユーティリティを集めたものである。
三番目は`torch`の高水準で直感的、使いやすいインターフェースで、ニューラルネットワークの定義、訓練、評価がわずか数行でできる。
`torch`自体のように三つのパッケージはCRANからインストールできる。

## torchのインストールと実行

`torch`はWindows、macOSとLinuxで利用できる。
対応するGPUと必要なNVIDAのソフトウェアがインストールされていれば、訓練されたモデルの種類次第で、かなりの高速化の恩恵を得られる。
本書の全ての例は、CPUで実行できるものを選び、読者が辛抱強く待つ必要がないようにした。

適合性の問題は一時的なものであるため、本書ではここに記さない。
同様に具体的なインストールの手順を羅列することも控える。
いつでも最新情報は[vignett](https://cran.r-project.org/web/packages/torch/vignettes/installation.html)から得られる。
問題や質問があれば、`torch`のGitHubリポジトリに遠慮なくissueを立ててほしい。