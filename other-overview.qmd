# 概要

これまで機械学習について多くの議論を重ねてきた。
しかし `torch` は他の目的の科学的な応用においても効果的に利用されている。
例えば、パターンや関係、構造を発見する数学的な手法に依存する例が挙げられる。

この部では、三つの話題に絞る。
最初は行列計算で、その重要性は疑うことが困難である。
実際、科学計算と機械学習の全ての計算は行列計算（テンソルは高次元の行列）である。
具体的には、最小二乗法を行列分解により解く。
その際に、 `linalg_cholesky()` 、`linalg_qr()` 、 `linalg_svd()` のような函数を使う。
また、どのように（本来の信号処理の意味での）畳み込みが効率的に実装されているかについても触れる。

次に、有名な数学的手法で、既に（間接的だが非常に便利に）使ったことがある離散フーリエ変換（DST: Discrete Fourier Transform）
今回はただ使うだけではなく、なぜそしてどのように動作するか理解することを目的する。
理解できたら、簡単な実装はわずか数行できる。
二番目の章では、高速フーリエ変換（FFT: Fast Fourier Transform）を使って、DFTを効率的に実装することに専念する。
自作の一つが驚くほど性能の上で `torch_fft_fft()` に近いか確認することになる。

最後に探求するのは、フーリエ法よりもはるかに新しい考え方、ウェーブレット変換である。
この変換はデータ解析において広く用いられているが、その理由が明らかになる。
`torch` にはウェーブレット変換を計算する専用の方法はないが、 `torch_fft_fft()` を繰り返し使うことで、効率的な実装ができる。